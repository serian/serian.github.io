<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>progmemo</title>
    <link>http://serian.github.io/</link>
    <description>Recent content on progmemo</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <lastBuildDate>Wed, 13 Jul 2016 09:20:05 +0900</lastBuildDate>
    <atom:link href="http://serian.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>vxaceのタイルセットの内装壁</title>
      <link>http://serian.github.io/post/vxace_naisou_kabe_no_nazo/</link>
      <pubDate>Wed, 13 Jul 2016 09:20:05 +0900</pubDate>
      
      <guid>http://serian.github.io/post/vxace_naisou_kabe_no_nazo/</guid>
      <description>&lt;p&gt;rpgツクールvxaceのタイルセットの扱い。&lt;br /&gt;
いわゆるマップチップの使い方の疑問点。&lt;br /&gt;
内装タイルセットで9段目くらいからの「内装壁」のペアについて。&lt;br /&gt;
&lt;img src=&#34;http://serian.github.io/images/gr-lean - RPGツクールVX Ace-2016-07--000008.png&#34; alt=&#34;内装壁&#34; /&gt;&lt;/p&gt;

&lt;p&gt;天板に相当するタイルは下方から侵入可能になってる。&lt;br /&gt;
&lt;img src=&#34;http://serian.github.io/images/gr-lean-2016-07--000009.png&#34; alt=&#34;内装壁&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://serian.github.io/images/gr-データベース-2016-07--000010.png&#34; alt=&#34;DB内の内装壁&#34; /&gt;&lt;br /&gt;
データベースでの通行設定はブロック×&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://serian.github.io/images/gr-データベース-2016-07--000011.png&#34; alt=&#34;DB内の内装壁&#34; /&gt;&lt;br /&gt;
４方向は無設定&lt;/p&gt;

&lt;p&gt;これはこういうものなのか。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>hugoの管理</title>
      <link>http://serian.github.io/post/hugo_continue_1/</link>
      <pubDate>Thu, 07 Jul 2016 11:27:08 +0900</pubDate>
      
      <guid>http://serian.github.io/post/hugo_continue_1/</guid>
      <description>

&lt;p&gt;Github Pagesとhugoについていくつかのサイトを読むと、どうもリポジトリを二つ作る流儀があるらしい。&lt;br /&gt;
というかそっちの方が多いような。&lt;br /&gt;
そして&amp;rdquo;gh-pages&amp;rdquo;とかいうブランチを作ったりという方式も。&lt;/p&gt;

&lt;h2 id=&#34;gh-pagesを作るかどうか&#34;&gt;gh-pagesを作るかどうか&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://help.github.com/articles/user-organization-and-project-pages/&#34;&gt;User, Organization, and Project Pages - User Documentation&lt;/a&gt;を読むと、これはどうやらプロジェクト毎のGithub Pagesを作る時の形式らしい。&lt;br /&gt;
で、Github Pagesとしては、そのプロジェクト名が、&lt;br /&gt;
&amp;gt; username.github.io/&amp;lt;プロジェクト名&amp;gt;
みたいな感じでディレクトリになるみたいな気がする。&lt;/p&gt;

&lt;p&gt;今回みたいに全く独立のサイト、User &amp;amp; Organization Pages を作って、ルート直下にファイルが場合は別によさそう。&lt;/p&gt;

&lt;h2 id=&#34;リポジトリを二つ作って管理するか&#34;&gt;リポジトリを二つ作って管理するか&lt;/h2&gt;

&lt;p&gt;要は、元のmarkdownファイルや*Hugoのシステム関係のファイル*とHugoで作った*webサイトとして公開するファイル*、つまり&lt;strong&gt;public&lt;/strong&gt;ディレクトリを別に管理するってことのようだ。&lt;br /&gt;
だから、前者をbitbuckets、後者をgithubで、って人もいた。&lt;/p&gt;

&lt;p&gt;Hugo本家のチュートリアル&lt;a href=&#34;http://gohugo.io/tutorials/github-pages-blog/&#34;&gt;Hugo - Hosting on GitHub Pages&lt;/a&gt;にも、インプットとアウトプットを分けるのはナイスな管理とか書いてある。&lt;/p&gt;

&lt;h3 id=&#34;git-subtreeを使う流儀&#34;&gt;git subtreeを使う流儀&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;http://qiita.com/__mick/items/e027cc3941ac52743bd5&#34;&gt;gitで外部moduleを扱う方法(subtree) - Qiita&lt;/a&gt;を読むと、単純に考えて、ファイルシステムで言うシンボリックリンクのような仕組みっぽい。&lt;/p&gt;

&lt;p&gt;本家のチュートリアルのようなproject pagesの場合、masterとgithub pages用のgit-pagesという二つのブランチがあって、そこではいちいちブランチ移動して更新するのは面倒だとしてある。&lt;br /&gt;
そこで、git-pagesのrootを、masterにsubtreeしてミラーを作って、masterブランチで更新していく対処法が書いてあるような気がするが、gitもgithubも単純なことしか知らないのでよくわからない。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>emacsのhugo.elを使ってみる</title>
      <link>http://serian.github.io/post/test_with_hugo_el/</link>
      <pubDate>Thu, 07 Jul 2016 06:18:02 +0900</pubDate>
      
      <guid>http://serian.github.io/post/test_with_hugo_el/</guid>
      <description>

&lt;h2 id=&#34;hugo-elを書いた-yewton-net-https-www-yewton-net-2016-01-26-hugo-el&#34;&gt;&lt;a href=&#34;https://www.yewton.net/2016/01/26/hugo-el/&#34;&gt;hugo.elを書いた · yewton.net&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;ht.elが無かったからpackage-listでインストール。&lt;br /&gt;
hugo-sites-dirにhugoで使うルートディレクトリを設定。&lt;br /&gt;
hugo-new-contentで新しい記事を書き始める。&lt;br /&gt;
hugo-start-serverでサーバースタート。&lt;br /&gt;
hugo-open-browserでプレビュー。
hugo-deployでpush。&lt;/p&gt;

&lt;h2 id=&#34;サーバの起動オプション&#34;&gt;サーバの起動オプション&lt;/h2&gt;

&lt;p&gt;最初からテーマありきの設定だと、デフォルトのものではうまくいかないのか。&lt;br /&gt;
&amp;rdquo;-DF&amp;rdquo;っていうのを、&amp;rdquo;-t&amp;rdquo; &amp;ldquo;angels-ladder&amp;rdquo; &amp;ldquo;-D&amp;rdquo; &amp;ldquo;-w&amp;rdquo;に変えた。&lt;/p&gt;

&lt;h2 id=&#34;deploy-sh&#34;&gt;deploy.sh&lt;/h2&gt;

&lt;p&gt;中でこれを起動してる。&lt;br /&gt;
&lt;a href=&#34;http://gohugo.io/tutorials/github-pages-blog/&#34;&gt;Hugo - Hosting on GitHub Pages&lt;/a&gt;にある。&lt;/p&gt;

&lt;p&gt;あるいは、&lt;a href=&#34;http://tanksuzuki.com/post/hugo-github-pages-2/&#34;&gt;Hugo + GitHub Pagesでブログを作る#2 | TANKSUZUKI.COM&lt;/a&gt;のhugo-build.sh。&lt;br /&gt;
これをhugo-sites-dirにおいておけばいいのか。&lt;br /&gt;
ただこの場合、&amp;rdquo;postの中をきれいにする&amp;rdquo;という部分はいらないようなそうでもないような？&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>hugoでメモサイトを作ってみる</title>
      <link>http://serian.github.io/post/test_article01/</link>
      <pubDate>Thu, 07 Jul 2016 02:59:26 +0900</pubDate>
      
      <guid>http://serian.github.io/post/test_article01/</guid>
      <description>

&lt;h2 id=&#34;参考サイト&#34;&gt;参考サイト&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;http://blog.shotarok.com/post/2015-12-15_my-first-post/&#34;&gt;Hugo + Github Pages でブログ開始 | shotarok&amp;rsquo;s Tech Blog&lt;/a&gt;&lt;br /&gt;
&lt;a href=&#34;http://tanksuzuki.com/post/hugo-github-pages-1/&#34;&gt;Hugo + GitHub Pagesでブログを作る#1 | TANKSUZUKI.COM&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>